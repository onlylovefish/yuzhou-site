import{_ as i,c as a,a as n,o as e}from"./app-Bg3bfEUT.js";const t="/yuzhou-site/assets/%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8%E5%9B%BE%E7%A4%BA-DbmSbUAx.png",l="/yuzhou-site/assets/%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8%E8%A7%A3%E7%AD%94%E6%96%B9%E6%B3%95-BIsFT8q3.png",h={};function k(p,s){return e(),a("div",null,s[0]||(s[0]=[n('<p><a href="https://leetcode.cn/problems/intersection-of-two-linked-lists/" target="_blank" rel="noopener noreferrer">相交链表</a><img src="'+t+'" alt="alt text"></p><p>该题实际是一个数学题，最后的公式</p><p>a+(b-c)=b+(a-c)</p><p><img src="'+l+`" alt="alt text"></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getIntersectionNode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">headA</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> headB</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    let</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> L1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">headA</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">headB</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    while</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!==</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        L1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!==null?</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">next</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L2</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        L2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!==null?</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">next</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">L1</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> L1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const d=i(h,[["render",k]]),B=JSON.parse('{"path":"/article/%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/","title":"相交链表","lang":"zh-CN","frontmatter":{"title":"相交链表","createTime":"2025/08/14 23:55:49","permalink":"/article/相交链表/"},"readingTime":{"minutes":0.32,"words":96},"git":{"createdTime":1755101235000,"updatedTime":1755353645000,"contributors":[{"name":"onlylovefish","username":"onlylovefish","email":"2511452548@qq.com","commits":3,"avatar":"https://avatars.githubusercontent.com/onlylovefish?v=4","url":"https://github.com/onlylovefish"}]},"filePathRelative":"leetcode/相交链表.md","headers":[],"categoryList":[{"id":"c305fb","sort":10007,"name":"leetcode"}]}');export{d as comp,B as data};
